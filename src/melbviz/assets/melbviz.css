body {
    margin: 0;
}

h1 {
    font-weight: 1.5em;
}

#sidebar {
    position: fixed;
    width: 500px;
    background-color: rgb(0,0,0,0.2);
    height: 100vh;
    padding: 0.5rem;
}

#month-input, #year-input {
    width: 150px;
}

#sensor-input {
    width: 300px;
}

#controls {
    width: 70%;
}

#controls > * {
    display: flex;
    justify-content: space-between;
    margin: 0.5em;
}


#sensor-counts {
    height: 600px;
    overflow-y: auto;
}

/* grid: rows / cols */
#content {
    margin-left: 520px;
    display: grid;
    grid: 0fr 0fr / 1fr 1fr;
}

#sensor-traffic {
    grid-column-start: 1;
    grid-column-end: span col2-start;
}


/*
 * loading spinners
 * Note: this is currently broken in Dash, but there's a fix that's just been
 * merged into master: https://github.com/plotly/dash-core-components/pull/837
 */


/* This loader will hide the component and add a spinner after 1 second */
*[data-dash-is-loading="true"].loader {
    transition-delay: 1s;
    transition-property: visibility;
    visibility: hidden;
}


/* This loader will fade the component and add a spinner after 1 second */
*[data-dash-is-loading="true"].loader-fade {
    transition-delay: 1s;
    transition-property: opacity;
    transition-duration: 1s;
    opacity: 0.6;
}


/* the spinner animation */
@keyframes spinner {
  to {transform: rotate(360deg);}
}


/* Animation that makes elements visible sharply at end of animation */ 
@keyframes offset {
    from {visibility: hidden;}
    99% {visibility: hidden;}
    to {visibility: visible;}
}


*[data-dash-is-loading="true"].loader::before,
*[data-dash-is-loading="true"].loader-fade::before {
    z-index: 9999;
    visibility: visible;
    content: '';
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30px;
    height: 30px;
    margin-top: -10px;
    margin-left: -10px;
    border-radius: 50%;
    border: 2px solid #999;
    border-top-color: #222;
    /* Wait for 0.5s before displaying spinner using 'offset' anomation This
       avoids flickering when wait times are low. */ 
    animation: offset 0.5s, spinner .6s linear infinite;
}
